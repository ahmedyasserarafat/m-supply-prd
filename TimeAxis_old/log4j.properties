# Global logging configuration
# Use this configuration to control the log levels globally, 
# To turn off logging completely, set log4j.rootLogger=OFF
# Typical production setting would log4j.rootLogger=WARN
# Available levels are DEBUG, ENTRY, EXIT,INFO, WARN, ERROR, FATAL
# If you want all the logs to be logged to the same file (SERVERLOG) turn on the additivity on each of the logger from false to true.

log4j.rootLogger=DEBUG,SERVERLOG

# Setting threshold to ALL that will allow individual configuration of Loggers
log4j.threshold=ALL




logfilelocation=D:/Canvas/Temp/RegistrationLogs
# Custom appender to manage both daily and size based rolling of files
customappender=com.polaris.canvas.common.DailyRollingFileAndSizeAppender


# The below attribute 'datepattern' decides on the following 2 aspects
# A. the period when the rollover should happen (i.e.,) daily, monthly, yearly etc 
# For Example:  
#     yyyy-MM >> Roll over at the beginning of each month
#     yyyy-ww >> Roll over at the first day of each week. The first day of the week depends on the locale.
#     yyyy-MM-dd >> Roll over at midnight each day.
#     yyyy-MM-dd-a >> Roll over at midnight and midday of each day.
#     yyyy-MM-dd-HH >> Roll over at the top of every hour.
#     yyyy-MM-dd-HH-mm >> Roll over at the beginning of every minute.
# B. The Date format to be displayed in the log file name generated
# For Example:
#     ddMMMyyyy - generates log file name with date stamp in the file name as 20MAR2010
#     yyyy-MM-dd - generates log file name with date stamp in the file name as 2010-03-20
datepattern=yyyy-MM-dd

# The below attribute 'rolloverModel' allows to choose any of the 2 models supported by our custom appender namely
# A. CREATENEW
#     Current logging would happen in the file name having the current date pattern and the highest rolling index value. (i.e., logging would happen by creating a new file)
# B. BACKUPOLD
#     Current logging would always happen in file name without date pattern and rolling index, on roll over the current file would be made as a backup with a date pattern and index included in it.
rollovermodel=BACKUPOLD

# The below attribute 'maxsizelimit' decides on the maximum file size of a log file considering the rollover period.
# For a period if the file size exceeds the set value a new file with same period would be generated with rolling index incremented by one.
# the appender expects size value in "KB", "MB" or "GB"
maxsizelimit=10MB

# the appender expects the following 2 options
# - SUFFIX
# - PREFIX
# based on which the appender will create the log file name in the following format or pattern  
# a. <filename><patternSeparator><datePattern><patternSeparator><rollingIndex>.<extension> if the suffixOrPrefix option is 'PREFIX'
# Example : serverLogs-2010-03-26-01.log
# b. <filename>.<extension><patternSeparator><datePattern><patternSeparator><rollingIndex> if the suffixOrPrefix option is 'SUFFIX'
# Example : serverLogs.log-2010-03-26-01
suffixorprefix=SUFFIX

# the appender expects any character except ':'which actually separates the date pattern in the file name with other components of the file name
patternseparator=-

layout=org.apache.log4j.PatternLayout

# Default Conversion pattern [dd-MMM-yyyy][HH:mm:ss:SSS] [Thread] [loggername] [level] [Message]
defaultconversionpattern=[%d{dd-MMM-yyyy}] [%d{HH:mm:ss:SSS}] [%t] [%X{USER_ID}] [%X{HOST_IP}][%X{REQUEST_ID}][%c][%p] {%m}%n

# Detailed Conversion pattern [dd-MMM-yyyy][HH:mm:ss:SSS] [Thread]  [loggername] [classname][FileName][MethodName][LineNo.] [level][Message]
# DO NOT USE THIS DETAILED CONVERSION PATTERN IN PRODUCTION. THIS SHOULD BE USED ONLY DURING DEVELOPEMNT
detailedconversionpattern=[%d{dd-MMM-yyyy}] [%d{HH:mm:ss:SSS}] [%t] [%c] [%C][%F][%M][%L] [%p] {%m}%n

# End of Common appender configuration details

#Appender configuration for Server Logger

logFile=${logfilelocation}/serverLogs.log
log4j.appender.SERVERLOG=${customappender}
log4j.appender.SERVERLOG.File=${logFile}
log4j.appender.SERVERLOG.layout=${layout}
log4j.appender.SERVERLOG.rolloverModel=${rollovermodel}
log4j.appender.SERVERLOG.maxFileSize=${maxsizelimit}
log4j.appender.SERVERLOG.datePattern=${datepattern}
log4j.appender.SERVERLOG.suffixOrPrefix=${suffixorprefix}
log4j.appender.SERVERLOG.patternSeparator=${patternseparator}
log4j.appender.SERVERLOG.layout.ConversionPattern=${defaultconversionpattern}

#Appender Configuration for dblogger

logFiledb=${logfilelocation}/dbLogs.log
log4j.appender.DBLOG=${customappender}
log4j.appender.DBLOG.File=${logFiledb}
log4j.appender.DBLOG.layout=${layout}
log4j.appender.DBLOG.rolloverModel=${rollovermodel}
log4j.appender.DBLOG.maxFileSize=${maxsizelimit}
log4j.appender.DBLOG.datePattern=${datepattern}
log4j.appender.DBLOG.suffixOrPrefix=${suffixorprefix}
log4j.appender.DBLOG.patternSeparator=${patternseparator}
log4j.appender.DBLOG.layout.ConversionPattern=${defaultconversionpattern}

#Appender Configuration for jsplogger

logFilejsp=${logfilelocation}/jspLogs.log
log4j.appender.JSPLOG=${customappender}
log4j.appender.JSPLOG.File=${logFilejsp}
log4j.appender.JSPLOG.layout=${layout}
log4j.appender.JSPLOG.rolloverModel=${rollovermodel}
log4j.appender.JSPLOG.maxFileSize=${maxsizelimit}
log4j.appender.JSPLOG.datePattern=${datepattern}
log4j.appender.JSPLOG.suffixOrPrefix=${suffixorprefix}
log4j.appender.JSPLOG.patternSeparator=${patternseparator}
log4j.appender.JSPLOG.layout.ConversionPattern=${defaultconversionpattern}



#Performance Timer Configuration
log4j.logger.com.polaris.canvas.common.PerformanceTimer=PERF#com.polaris.canvas.common,PerformanceLog
log4j.additivity.com.polaris.canvas.common.PerformanceTimer=false

# Detailed Conversion pattern [dd-MMM-yyyy][HH:mm:ss:SSS] [Thread]  [loggername] [classname][FileName][MethodName][LineNo.] [level][Message]
# DO NOT USE THIS DETAILED CONVERSION PATTERN IN PRODUCTION. THIS SHOULD BE USED ONLY DURING DEVELOPEMNT
detailedconversionpattern=[%d{dd-MMM-yyyy}] [%d{HH:mm:ss:SSS}] [%t] [%c] [%C][%F][%M][%L] [%p] {%m}%n

# Start of appender for Performance logging
defaultconversionpatternPerf=%d{dd-MMM-yyyy}$%d{HH:mm:ss:SSS}$%t$%X{USER_ID}$%X{REQUEST_ID}%x$-%m%n
log4j.appender.PerformanceLog=${customappender}
log4j.appender.PerformanceLog.File=${logfilelocation}/performance.log
log4j.appender.PerformanceLog.layout=${layout}
log4j.appender.PerformanceLog.rolloverModel=${rollovermodel}
log4j.appender.PerformanceLog.maxFileSize=${maxsizelimit}
log4j.appender.PerformanceLog.datePattern=${datepattern}
log4j.appender.PerformanceLog.suffixOrPrefix=${suffixorprefix}
log4j.appender.PerformanceLog.patternSeparator=${patternseparator}
log4j.appender.PerformanceLog.layout.ConversionPattern=${defaultconversionpatternPerf}




